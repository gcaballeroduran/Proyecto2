// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/Lexer.gold"
import gold.structures.automaton.*;
import gold.util.*;
import gold.visualization.automaton.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class Lexer {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=6;
      Object lexer=$fix(Lexer.createTransducer());
      $line=7;
      Lexer.testLexer($cast(gold.structures.automaton.ITransducer.class,lexer));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer.class,"main",$line);
    }
  }
  public static Object testLexer(ITransducer M) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=13;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=15;
      Object input=$fix("");
      $line=18;
      System.out.println($message(new Object[]{"----------------------------"}));
      $line=19;
      System.out.println($message(new Object[]{"Enter one or more lines. End with a single line with $"}));
      $line=20;
      System.out.println($message(new Object[]{"If you want to stop testing, enter EXIT"}));
      $line=21;
      Object string=$fix(((java.util.Scanner)sc).nextLine());
      $line=25;
      while (true) {
        if (!(!$opEqualY(string,"EXIT"))) break;
        $line=29;
        while (true) {
          if (!(!$opEqualY($invokeMethod("charAt",string,new Object[]{0}),'$'))) break;
          $line=30;
          input=$fix($opAdditY($opAdditY(input,string)," "));
          $line=31;
          string=$fix(((java.util.Scanner)sc).nextLine());
        }
        $line=34;
        Object result=$fix(((gold.structures.automaton.ITransducer)M).acceptsString($cast(java.lang.String.class,input)));
        $line=35;
        Object tokenStream=$fix(((gold.structures.automaton.ITransducer)M).getOutputString());
        $line=37;
        System.out.println($message(new Object[]{$opAdditY($opAdditY("The lexer did ",(($bool(result))?(""):("not ")))," accept the string.")}));
        $line=38;
        if ($bool(result)) {
          $line=38;
          System.out.println($message(new Object[]{$opAdditY("Token Stream: ",tokenStream)}));
        }
        $line=40;
        System.out.println($message(new Object[]{"----------------------------"}));
        $line=42;
        System.out.println($message(new Object[]{"Enter one or more lines. End with a single line with $"}));
        $line=43;
        System.out.println($message(new Object[]{"If you want to stop testing, enter EXIT"}));
        $line=44;
        string=$fix(((java.util.Scanner)sc).nextLine());
      }
      $line=47;
      System.out.println($message(new Object[]{"Good bye"}));
      $line=48;
      System.out.println($message(new Object[]{""}));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer.class,"testLexer",$line);
    }
    return $result;
  }
  public static Object names=null;
  public static ITransducer createTransducer() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=62;
      Object Q=$fix(GCollections.asSet("R","RV","s","n","nc","ncn","l","lp","lpl","lplp","lplc","lplcl","lplclp","lplclpf","lplpf","Err"));
      $line=64;
      Object \u03A3=$fix($opUnionY($opUnionY($opIntvlY('a','z'),GCollections.asSet('(',')',' ','\n','{','}',';','!','[',']',',')),$opIntvlY('A','Z')));
      $line=65;
      Object Out=$fix(GCollections.asSet('(',')','+','*','v','n'));
      $line=66;
      Object q_0=$fix("R");
      $line=67;
      Object F=$fix(GCollections.asSet("R"));
      $line=68;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,\u03A3,Out,q_0,F,new GMethod(Lexer.class,"\u03B4"),new GMethod(Lexer.class,"g"),new GMethod(Lexer.class,"h")});
      if (true) break $try;
      $line=69;
      $rethrow(new RuntimeException("The function \"createTransducer()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer.class,"createTransducer",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object \u03B4(Object q, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=72;
      if ($bool($opEqualY(q,"Err"))) {
        $line=72;
        $result="Err";
        if (true) break $try;
      }
      else {
        $line=73;
        if (($opEqualY(q,"R")&&$opEqualY(\u03C3,'R'))) {
          $line=73;
          $result="R";
          if (true) break $try;
        }
        else {
          $line=74;
          if (($opEqualY(q,"R")&&$opEqualY(\u03C3,'V'))) {
            $line=74;
            $result="RV";
            if (true) break $try;
          }
          else {
            $line=75;
            if (($opEqualY(q,"RV")&&$opMembrY(\u03C3,$opIntvlY('a','z')))) {
              $line=75;
              $result="n";
              if (true) break $try;
            }
            else {
              $line=76;
              if (($opEqualY(q,"n")&&$opEqualY(\u03C3,','))) {
                $line=76;
                $result="nc";
                if (true) break $try;
              }
              else {
                $line=77;
                if (($opEqualY(q,"nc")&&$opMembrY(\u03C3,$opIntvlY('a','z')))) {
                  $line=77;
                  $result="ncn";
                  if (true) break $try;
                }
                else {
                  $line=79;
                  if (($opEqualY(q,"lplclpf")&&$opMembrY(\u03C3,$opIntvlY('A','Z')))) {
                    $line=79;
                    $result="l";
                    if (true) break $try;
                  }
                  else {
                    $line=80;
                    if (($opEqualY(q,"lplpf")&&$opMembrY(\u03C3,$opIntvlY('A','Z')))) {
                      $line=80;
                      $result="l";
                      if (true) break $try;
                    }
                    else {
                      $line=81;
                      if (($opEqualY(q,"ncn")&&$opMembrY(\u03C3,$opIntvlY('A','Z')))) {
                        $line=81;
                        $result="l";
                        if (true) break $try;
                      }
                      else {
                        $line=82;
                        if (($opEqualY(q,"l")&&$opEqualY(\u03C3,'('))) {
                          $line=82;
                          $result="lp";
                          if (true) break $try;
                        }
                        else {
                          $line=83;
                          if (($opEqualY(q,"lp")&&$opMembrY(\u03C3,$opIntvlY('A','Z')))) {
                            $line=83;
                            $result="lpl";
                            if (true) break $try;
                          }
                          else {
                            $line=85;
                            if (($opEqualY(q,"lpl")&&$opEqualY(\u03C3,')'))) {
                              $line=85;
                              $result="lplp";
                              if (true) break $try;
                            }
                            else {
                              $line=86;
                              if (($opEqualY(q,"lplp")&&$opEqualY(\u03C3,';'))) {
                                $line=86;
                                $result="lplpf";
                                if (true) break $try;
                              }
                              else {
                                $line=89;
                                if (($opEqualY(q,"lpl")&&$opEqualY(\u03C3,','))) {
                                  $line=89;
                                  $result="lplc";
                                  if (true) break $try;
                                }
                                else {
                                  $line=90;
                                  if (($opEqualY(q,"lplc")&&$opMembrY(\u03C3,$opIntvlY('A','Z')))) {
                                    $line=90;
                                    $result="lplcl";
                                    if (true) break $try;
                                  }
                                  else {
                                    $line=91;
                                    if (($opEqualY(q,"lplcl")&&$opEqualY(\u03C3,')'))) {
                                      $line=91;
                                      $result="lplclp";
                                      if (true) break $try;
                                    }
                                    else {
                                      $line=92;
                                      if (($opEqualY(q,"lplclp")&&$opEqualY(\u03C3,';'))) {
                                        $line=92;
                                        $result="lplclpf";
                                        if (true) break $try;
                                      }
                                      else {
                                        $line=94;
                                        $result="R";
                                        if (true) break $try;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      $line=96;
      $rethrow(new RuntimeException("The function \"\u03B4(q:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object g(Object q) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=101;
      $result="";
      if (true) break $try;
      $line=102;
      $rethrow(new RuntimeException("The function \"g(q:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer.class,"g",$line);
    }
    return $result;
  }
  public static Object h(Object q, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=105;
      String s=null;
      s=$defaultValue(String.class);
      $line=106;
      s=$cast(String.class,$fix(""));
      $line=108;
      if (!$opMembrY(q,GCollections.asSet("Err"))) {
        $line=108;
        $result=s;
        if (true) break $try;
      }
      else {
        $line=109;
        $result="";
        if (true) break $try;
      }
      $line=111;
      $rethrow(new RuntimeException("The function \"h(q:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer.class,"h",$line);
    }
    return $result;
  }
}
